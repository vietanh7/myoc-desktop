3.1.7 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode
;0;[ :@options{ :
@linei:@imported_filename"sharedo:Sass::Tree::CommentNode;[ :
@loud0;	@
:@silenti :@value"ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;
i:@lines[ o:Sass::Tree::VariableNode;[ ;	@
:@guarded"!default:
@expro:Sass::Script::String	;	@
;"all;
i:
@type:identifier;
i:
@name" default-transition-propertyo;;[ ;	@
;"!default;o:Sass::Script::Number:@original"1s;	@
:@denominator_units[ ;i;
i:@numerator_units["s;
i;" default-transition-durationo;;[ ;	@
;"!default;o:Sass::Script::Bool;	@
;F;
i;
i;" default-transition-functiono;;[ ;	@
;"!default;o;;	@
;F;
i;
i;"default-transition-delayo;;[ ;	@
;"!default;o:Sass::Script::List	;	@
;[o;	;	@
;"transform;
i;;o;	;	@
;"transform-origin;
i;;;
i:@separator:
comma;
i;"#transitionable-prefixed-valueso;;[ ;0;	@
;i ;"}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;
i!;[ o:Sass::Tree::MixinDefNode;[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"string:
@linei1:
@type:identifier;
@:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;
@;i1:@underscored_name"property_1:
@name"property-1;
@;i1:@keywords{ ;"type-of;i10[o:Sass::Tree::VariableNode:@children[ ;
@:@guarded0:
@expro;
;[o;	;
@;i1;"property_1;"property-1;
@;i1;{ ;"unquote;i1;"property-1o;;[ ;	@
;0;o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;	@
;
i2:@underscored_name"property_1;"property-1o;$	;	@
;
i2;%"property_2;"property-2o;$	;	@
;
i2;%"property_3;"property-3o;$	;	@
;
i2;%"property_4;"property-4o;$	;	@
;
i2;%"property_5;"property-5o;$	;	@
;
i2;%"property_6;"property-6o;$	;	@
;
i2;%"property_7;"property-7o;$	;	@
;
i2;%"property_8;"property-8o;$	;	@
;
i2;%"property_9;"property-9o;$	;	@
;
i2;%"property_10;"property-10;	@
;
i2:@keywords{ ;"compact;
i2;"propertiesu;!¼[o:Sass::Script::Variable	:@options{ :
@linei3:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode:@children[ ;@:@prop_syntax:new:
@tabsi :@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;@;"-webkit;i3:
@type:identifiero; 	;@;i3;"properties;	"properties;@;i3:@keywords{ ;	"prefixed-for-transition;i3;	[" -webkit-transition-propertyu;!¸[o:Sass::Script::Variable	:@options{ :
@linei4:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode:@children[ ;@:@prop_syntax:new:
@tabsi :@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;@;"	-moz;i4:
@type:identifiero; 	;@;i4;"properties;	"properties;@;i4:@keywords{ ;	"prefixed-for-transition;i4;	["-moz-transition-propertyu;!°[o:Sass::Script::Variable	:@options{ :
@linei5:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode:@children[ ;@:@prop_syntax:new:
@tabsi :@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;@;"-o;i5:
@type:identifiero; 	;@;i5;"properties;	"properties;@;i5:@keywords{ ;	"prefixed-for-transition;i5;	["-o-transition-propertyo:Sass::Tree::PropNode;[ ;	@
:@prop_syntax:new:
@tabsi ;o;$	;	@
;
i6;%"properties;"properties;
i6;["transition-property;#[[o;$;	{ ;%"property_1;"property-1o;$	;	@l;
i&;%" default_transition_property;" default-transition-property[o;$;	@l;%"property_2;"property-2o;;	@l;F;
i'[o;$;	@l;%"property_3;"property-3o;;	@l;F;
i([o;$;	@l;%"property_4;"property-4o;;	@l;F;
i)[o;$;	@l;%"property_5;"property-5o;;	@l;F;
i*[o;$;	@l;%"property_6;"property-6o;;	@l;F;
i+[o;$;	@l;%"property_7;"property-7o;;	@l;F;
i,[o;$;	@l;%"property_8;"property-8o;;	@l;F;
i-[o;$;	@l;%"property_9;"property-9o;;	@l;F;
i.[o;$;	@l;%"property_10;"property-10o;;	@l;F;
i/;	@
:@has_childrenT;
i0;"transition-propertyo;;[ ;0;	@
;i ;"¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;
i9;[ o; ;[u;!Í[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"string:
@lineiI:
@type:identifier;
@:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;
@;iI:@underscored_name"duration_1:
@name"duration-1;
@;iI:@keywords{ ;"type-of;iI0[o:Sass::Tree::VariableNode:@children[ ;
@:@guarded0:
@expro;
;[o;	;
@;iI;"duration_1;"duration-1;
@;iI;{ ;"unquote;iI;"duration-1o;;[ ;	@
;0;o;"
;#[o;$	;	@
;
iJ;%"duration_1;"duration-1o;$	;	@
;
iJ;%"duration_2;"duration-2o;$	;	@
;
iJ;%"duration_3;"duration-3o;$	;	@
;
iJ;%"duration_4;"duration-4o;$	;	@
;
iJ;%"duration_5;"duration-5o;$	;	@
;
iJ;%"duration_6;"duration-6o;$	;	@
;
iJ;%"duration_7;"duration-7o;$	;	@
;
iJ;%"duration_8;"duration-8o;$	;	@
;
iJ;%"duration_9;"duration-9o;$	;	@
;
iJ;%"duration_10;"duration-10;	@
;
iJ;&{ ;"compact;
iJ;"durationso:Sass::Tree::MixinNode;[ ;#[o;	;	@
;"transition-duration;
iK;;o;$	;	@
;
iK;%"durations;"durationso;	;	@
;"	-moz;
iL;;o;	;	@
;"-webkit;
iL;;o;	;	@
;"-o;
iL;;o:!Sass::Script::UnaryOperation	:@operator:not;	@
:@operando;	;	@
;"-ms;
iL;;;
iLo;-	;.;/;	@
;0o;	;	@
;"-khtml;
iL;;;
iLo;	;	@
;"official;
iL;;;	@
;
iM;&{ ;"experimental;#[[o;$;	{ ;%"duration_1;"duration-1o;$	;	@â;
i>;%" default_transition_duration;" default-transition-duration[o;$;	@â;%"duration_2;"duration-2o;;	@â;F;
i?[o;$;	@â;%"duration_3;"duration-3o;;	@â;F;
i@[o;$;	@â;%"duration_4;"duration-4o;;	@â;F;
iA[o;$;	@â;%"duration_5;"duration-5o;;	@â;F;
iB[o;$;	@â;%"duration_6;"duration-6o;;	@â;F;
iC[o;$;	@â;%"duration_7;"duration-7o;;	@â;F;
iD[o;$;	@â;%"duration_8;"duration-8o;;	@â;F;
iE[o;$;	@â;%"duration_9;"duration-9o;;	@â;F;
iF[o;$;	@â;%"duration_10;"duration-10o;;	@â;F;
iG;	@
;+T;
iH;"transition-durationo;;[ ;0;	@
;i ;"õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;
iP;[ o; ;[o;;[ ;	@
;0;o;"
;#[o;$	;	@
;
ia;%"function_1;"function-1;	@
;
ia;&{ ;"unquote;
ia;"function-1o;;[ ;	@
;0;o;"
;#[o;$	;	@
;
ib;%"function_1;"function-1o;$	;	@
;
ib;%"function_2;"function-2o;$	;	@
;
ib;%"function_3;"function-3o;$	;	@
;
ib;%"function_4;"function-4o;$	;	@
;
ib;%"function_5;"function-5o;$	;	@
;
ib;%"function_6;"function-6o;$	;	@
;
ib;%"function_7;"function-7o;$	;	@
;
ib;%"function_8;"function-8o;$	;	@
;
ib;%"function_9;"function-9o;$	;	@
;
ib;%"function_10;"function-10;	@
;
ib;&{ ;"compact;
ib;"functionso;,;[ ;#[o;	;	@
;"transition-timing-function;
ic;;o;$	;	@
;
ic;%"functions;"functionso;	;	@
;"	-moz;
id;;o;	;	@
;"-webkit;
id;;o;	;	@
;"-o;
id;;o;-	;.;/;	@
;0o;	;	@
;"-ms;
id;;;
ido;-	;.;/;	@
;0o;	;	@
;"-khtml;
id;;;
ido;	;	@
;"official;
id;;;	@
;
ie;&{ ;"experimental;#[[o;$;	{ ;%"function_1;"function-1o;$	;	@f;
iV;%" default_transition_function;" default-transition-function[o;$;	@f;%"function_2;"function-2o;;	@f;F;
iW[o;$;	@f;%"function_3;"function-3o;;	@f;F;
iX[o;$;	@f;%"function_4;"function-4o;;	@f;F;
iY[o;$;	@f;%"function_5;"function-5o;;	@f;F;
iZ[o;$;	@f;%"function_6;"function-6o;;	@f;F;
i[[o;$;	@f;%"function_7;"function-7o;;	@f;F;
i\[o;$;	@f;%"function_8;"function-8o;;	@f;F;
i][o;$;	@f;%"function_9;"function-9o;;	@f;F;
i^[o;$;	@f;%"function_10;"function-10o;;	@f;F;
i_;	@
;+T;
i`;"transition-timing-functiono;;[ ;0;	@
;i ;"¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;
ih;[ o; ;[u;!¾[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"string:
@lineix:
@type:identifier;
@:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;
@;ix:@underscored_name"delay_1:
@name"delay-1;
@;ix:@keywords{ ;"type-of;ix0[o:Sass::Tree::VariableNode:@children[ ;
@:@guarded0:
@expro;
;[o;	;
@;ix;"delay_1;"delay-1;
@;ix;{ ;"unquote;ix;"delay-1o;;[ ;	@
;0;o;"
;#[o;$	;	@
;
iy;%"delay_1;"delay-1o;$	;	@
;
iy;%"delay_2;"delay-2o;$	;	@
;
iy;%"delay_3;"delay-3o;$	;	@
;
iy;%"delay_4;"delay-4o;$	;	@
;
iy;%"delay_5;"delay-5o;$	;	@
;
iy;%"delay_6;"delay-6o;$	;	@
;
iy;%"delay_7;"delay-7o;$	;	@
;
iy;%"delay_8;"delay-8o;$	;	@
;
iy;%"delay_9;"delay-9o;$	;	@
;
iy;%"delay_10;"delay-10;	@
;
iy;&{ ;"compact;
iy;"delayso;,;[ ;#[o;	;	@
;"transition-delay;
iz;;o;$	;	@
;
iz;%"delays;"delayso;	;	@
;"	-moz;
i{;;o;	;	@
;"-webkit;
i{;;o;	;	@
;"-o;
i{;;o;-	;.;/;	@
;0o;	;	@
;"-ms;
i{;;;
i{o;-	;.;/;	@
;0o;	;	@
;"-khtml;
i{;;;
i{o;	;	@
;"official;
i{;;;	@
;
i|;&{ ;"experimental;#[[o;$;	{ ;%"delay_1;"delay-1o;$	;	@á;
im;%"default_transition_delay;"default-transition-delay[o;$;	@á;%"delay_2;"delay-2o;;	@á;F;
in[o;$;	@á;%"delay_3;"delay-3o;;	@á;F;
io[o;$;	@á;%"delay_4;"delay-4o;;	@á;F;
ip[o;$;	@á;%"delay_5;"delay-5o;;	@á;F;
iq[o;$;	@á;%"delay_6;"delay-6o;;	@á;F;
ir[o;$;	@á;%"delay_7;"delay-7o;;	@á;F;
is[o;$;	@á;%"delay_8;"delay-8o;;	@á;F;
it[o;$;	@á;%"delay_9;"delay-9o;;	@á;F;
iu[o;$;	@á;%"delay_10;"delay-10o;;	@á;F;
iv;	@
;+T;
iw;"transition-delayo;;[ ;0;	@
;i ;"*/* Transition all-in-one shorthand */;
i;[ o; ;[o;,;[ ;#[o;"
;#[o;	;	@
;[	o;$	;	@
;
i;%"property;"propertyo;$	;	@
;
i;%"duration;"durationo;$	;	@
;
i;%"function;"functiono;$	;	@
;
i;%"
delay;"
delay;
i;:
space;	@
;
i;&{ ;"compact;	@
;
i;&{ ;"transition;#[	[o;$;	{ ;%"property;"propertyo;$	;	@5;
i};%" default_transition_property;" default-transition-property[o;$;	@5;%"duration;"durationo;$	;	@5;
i~;%" default_transition_duration;" default-transition-duration[o;$;	@5;%"function;"functiono;$	;	@5;
i;%" default_transition_function;" default-transition-function[o;$;	@5;%"
delay;"
delayo;$	;	@5;
i;%"default_transition_delay;"default-transition-delay;	@
;+T;
i;"single-transitiono; ;[u;!î[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"default:
@linei:
@type:identifier;
@:@operand1o:Sass::Script::Variable	;
@;i:@underscored_name"transition_1:
@name"transition-1;i0[o:Sass::Tree::VariableNode:@children[ ;
@:@guarded0:
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::List	;
@;[	o;	;
@;i;" default_transition_property;" default-transition-propertyo;	;
@;i;" default_transition_duration;" default-transition-durationo;	;
@;i;" default_transition_function;" default-transition-functiono;	;
@;i;"default_transition_delay;"default-transition-delay;i:@separator:
space;
@;i:@keywords{ ;"compact;i;"transition-1o;;[ ;	@
;0;o;;	@
;F;
i;
i;"transitionsu;!g[o:Sass::Script::Operation
:@operator:and:@operand2o; 
;:eq;o:Sass::Script::String	:@options{ :@value"	list:
@linei:
@type:identifier;@	:@operand1o:Sass::Script::Funcall
:
@args[o;
;[o:Sass::Script::Variable	;@	;i:@underscored_name"transition_1:
@name"transition-1o:Sass::Script::Number:@original"1;@	:@denominator_units[ ;i;i:@numerator_units[ ;@	;i:@keywords{ ;"nth;@	;i;{ ;"type-of;i;@	;o; 
;;	;o;
	;@	;"	list;i;;;@	;o;
;[o;	;@	;i;"transition_1;"transition-1;@	;i;{ ;"type-of;i;iu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@children[ :@options{ :@guarded0:
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;@	:
@linei:@underscored_name"transition_1:
@name"transition-1o;	;@	;i;"transition_2;"transition-2o;	;@	;i;"transition_3;"transition-3o;	;@	;i;"transition_4;"transition-4o;	;@	;i;"transition_5;"transition-5o;	;@	;i;"transition_6;"transition-6o;	;@	;i;"transition_7;"transition-7o;	;@	;i;"transition_8;"transition-8o;	;@	;i;"transition_9;"transition-9o;	;@	;i;"transition_10;"transition-10;@	;i:@keywords{ ;"compact;i;"transitions[o:Sass::Tree::VariableNode:@children[ ;@	:@guarded0:
@expro;
;[o;	;@	;i;"transition_1;"transition-1o;
;[o;	;@	;i;"transition_2;"transition-2o;	;@	;i;"transition_3;"transition-3o;	;@	;i;"transition_4;"transition-4o;	;@	;i;"transition_5;"transition-5o;	;@	;i;"transition_6;"transition-6o;	;@	;i;"transition_7;"transition-7o;	;@	;i;"transition_8;"transition-8o;	;@	;i;"transition_9;"transition-9o;	;@	;i;"transition_10;"transition-10;@	;i;{ ;"compacto;
	;@	;"
comma;i;;;@	;i;{ ;"	join;i;"transitionso;;[ ;	@
;0;o;"
;#[ ;	@
;
i;&{ ;"comma-list;
i;"delayso;;[ ;	@
;0;o;;	@
;F;
i;
i;"has-delayso;;[ ;	@
;0;o;"
;#[ ;	@
;
i;&{ ;"comma-list;
i;"webkit-valueo;;[ ;	@
;0;o;"
;#[ ;	@
;
i;&{ ;"comma-list;
i;"moz-valueo;;[ ;	@
;0;o;"
;#[ ;	@
;
i;&{ ;"comma-list;
i;"o-valueo;;[ ;0;	@
;i ;"/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;
i ;[ o:Sass::Tree::EachNode;[o;;[ ;0;	@
;i ;"}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;
i£;[ o;;[ ;	@
;0;o;"
;#[o;$	;	@
;
i¥;%"transition;"transitiono;;"1;	@
;[ ;i;
i¥;[ ;	@
;
i¥;&{ ;"nth;
i¥;"propertyo;;[ ;	@
;0;o;;	@
;F;
i¦;
i¦;"durationo;;[ ;	@
;0;o;;	@
;F;
i§;
i§;"timing-functiono;;[ ;	@
;0;o;;	@
;F;
i¨;
i¨;"
delayu;!
[o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@original"1:@options{ :@denominator_units[ :@valuei:
@linei©:@numerator_units[ ;@	:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;@	;i©:@underscored_name"transition:
@name"transition;@	;i©:@keywords{ ;"length;i©0[o:Sass::Tree::VariableNode:@children[ ;@	:@guarded0:
@expro;
;[o;	;@	;i©;"transition;"transitiono;	;
"2;@	;@
;i;i©;[ ;@	;i©;{ ;"nth;i©;"durationu;![o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@original"2:@options{ :@denominator_units[ :@valuei:
@lineiª:@numerator_units[ ;@	:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;@	;iª:@underscored_name"transition:
@name"transition;@	;iª:@keywords{ ;"length;iª0[o:Sass::Tree::VariableNode:@children[ ;@	:@guarded0:
@expro;
;[o;	;@	;iª;"transition;"transitiono;	;
"3;@	;@
;i;iª;[ ;@	;iª;{ ;"nth;iª;"timing-functionu;!M[o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@original"3:@options{ :@denominator_units[ :@valuei:
@linei«:@numerator_units[ ;@	:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;@	;i«:@underscored_name"transition:
@name"transition;@	;i«:@keywords{ ;"length;i«0[o:Sass::Tree::VariableNode:@children[ ;@	:@guarded0:
@expro;
;[o;	;@	;i«;"transition;"transitiono;	;
"4;@	;@
;i	;i«;[ ;@	;i«;{ ;"nth;i«;"
delayo;;[ ;@	;0;o:Sass::Script::Bool;@	;T;i«;i«;"has-delayso;;[ ;0;	@
;i ;";/* If a delay is provided without a timing function */;
i­;[ u;!^[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :@operando:Sass::Script::Variable	;@:
@linei®:@underscored_name"
delay:
@name"
delay;i®;@:@operand1o:Sass::Script::Funcall
:
@args[o;	;@;i®;"timing_function;"timing-function;@;i®:@keywords{ ;"is-time;i®0[o:Sass::Tree::VariableNode:@children[ ;@:@guarded0:
@expro;	;@;i®;"timing_function;"timing-function;i®;"
delayo;;[ ;@;0;o:Sass::Script::Bool;@:@valueF;i®;i®;"timing-functiono;;[ ;@;0;o;;@;T;i®;i®;"has-delayso;;[ ;0;	@
;i ;"9/* Keep a list of delays in case one is specified */;
i°;[ o;;[ ;	@
;0;o;"
;#[o;$	;	@
;
i±;%"delays;"delayso;"
;#[o;$	;	@
;
i±;%"
delay;"
delayo;$	;	@
;
i±;%"
delay;"
delayo;;"0s;	@
;[ ;i ;
i±;["s;	@
;
i±;&{ ;"if;	@
;
i±;&{ ;"append;
i±;"delayso;;[ ;	@
;0;o;"
;#[o;$	;	@
;
i³;%"webkit_value;"webkit-valueo;"
;#[o;	;	@
;[o;"
;#[o;	;	@
;"-webkit;
i³;;o;$	;	@
;
i³;%"property;"property;	@
;
i³;&{ ;"prefixed-for-transitiono;$	;	@
;
i³;%"duration;"durationo;$	;	@
;
i³;%"timing_function;"timing-function;
i³;;1;	@
;
i³;&{ ;"compact;	@
;
i³;&{ ;"append;
i³;"webkit-valueo;;[ ;	@
;0;o;"
;#[o;$	;	@
;
i´;%"moz_value;"moz-valueo;"
;#[o;	;	@
;[	o;"
;#[o;	;	@
;"	-moz;
i´;;o;$	;	@
;
i´;%"property;"property;	@
;
i´;&{ ;"prefixed-for-transitiono;$	;	@
;
i´;%"duration;"durationo;$	;	@
;
i´;%"timing_function;"timing-functiono;$	;	@
;
i´;%"
delay;"
delay;
i´;;1;	@
;
i´;&{ ;"compact;	@
;
i´;&{ ;"append;
i´;"moz-valueo;;[ ;	@
;0;o;"
;#[o;$	;	@
;
iµ;%"o_value;"o-valueo;"
;#[o;	;	@
;[	o;"
;#[o;	;	@
;"-o;
iµ;;o;$	;	@
;
iµ;%"property;"property;	@
;
iµ;&{ ;"prefixed-for-transitiono;$	;	@
;
iµ;%"duration;"durationo;$	;	@
;
iµ;%"timing_function;"timing-functiono;$	;	@
;
iµ;%"
delay;"
delay;
iµ;;1;	@
;
iµ;&{ ;"compact;	@
;
iµ;&{ ;"append;
iµ;"o-value:	@var"transition;	@
:
@listo;$	;	@
;
i¢;%"transitions;"transitions;+T;
i¢u;!é[o:Sass::Script::Variable	:@options{ :
@linei¸:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode:@children[ ;@:@prop_syntax:new:
@tabsi :@valueo; 	;@;i¸;"webkit_value;	"webkit-value;i¸;	["-webkit-transitiono:Sass::Tree::CommentNode;[ :
@loud0;@:@silenti ;"j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹:@lines[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@options{ :
@lineiº:@underscored_name"has_delays:
@name"has-delays0[o:Sass::Tree::PropNode:@children[ ;@:@prop_syntax:new:
@tabsi :@valueo; 	;@;iº;"delays;	"delays;iº;	["-webkit-transition-delayu;!#[o:Sass::Script::Variable	:@options{ :
@linei»:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode:@children[ ;@:@prop_syntax:new:
@tabsi :@valueo; 	;@;i»;"moz_value;	"moz-value;i»;	["-moz-transitionu;![o:Sass::Script::Variable	:@options{ :
@linei¼:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode:@children[ ;@:@prop_syntax:new:
@tabsi :@valueo; 	;@;i¼;"o_value;	"o-value;i¼;	["-o-transitiono;';[ ;	@
;(;);*i ;o;$	;	@
;
i½;%"transitions;"transitions;
i½;["transition;#[[o;$;	{ ;%"transition_1;"transition-1o;	;	@6;"default;
i;;[o;$;	@6;%"transition_2;"transition-2o;;	@6;F;
i[o;$;	@6;%"transition_3;"transition-3o;;	@6;F;
i[o;$;	@6;%"transition_4;"transition-4o;;	@6;F;
i[o;$;	@6;%"transition_5;"transition-5o;;	@6;F;
i[o;$;	@6;%"transition_6;"transition-6o;;	@6;F;
i[o;$;	@6;%"transition_7;"transition-7o;;	@6;F;
i[o;$;	@6;%"transition_8;"transition-8o;;	@6;F;
i[o;$;	@6;%"transition_9;"transition-9o;;	@6;F;
i[o;$;	@6;%"transition_10;"transition-10o;;	@6;F;
i;	@
;+T;
i;"transitiono;;[ ;0;	@
;i ;"Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;
iÀ;[ o:Sass::Tree::FunctionNode;[o:Sass::Tree::ReturnNode	;[ ;	@
;o;"
;#[o;	;	@
;[ ;
iÂ;;1o;$	;	@
;
iÂ;%"	list;"	listo;	;	@
;"
comma;
iÂ;;;	@
;
iÂ;&{ ;"	join;
iÂ;#[[o;$;	@
;%"	list;"	listo;	;	@
;[ ;
iÁ;;1;	@
;+T;
iÁ;"comma-listo;;[ ;0;	@
;i ;"i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;
iÅ;[ o;5;[u;![o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"	list:
@lineiÇ:
@type:identifier;
@:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;
@;iÇ:@underscored_name"property:
@name"property;
@;iÇ:@keywords{ ;"type-of;iÇu:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@options{ :
@lineiÎ:@underscored_name"#transitionable_prefixed_values:
@name"#transitionable-prefixed-valueso;	;@	;	iÎ;
"property;"property;@	;	iÎ:@keywords{ ;"
indexu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:@children[ :@options{ :
@expro:Sass::Script::Variable	;@	:
@lineiÑ:@underscored_name"property:
@name"property;
iÑ[o:Sass::Tree::ReturnNode	:@children[ ;@	:
@expro: Sass::Script::Interpolation:@whitespace_after0:@before0;@	:@whitespace_beforei:@aftero;;0;o;;F;0;@	;0;0;	iÏ:@originally_text:originally_text:	@mido:Sass::Script::String	;@	:@value"-;	iÏ:
@type:identifier;@	;0;0;	iÏ;F;o;	;@	;	iÏ;
"property;"property;	iÏ;F;o;	;@	;	iÏ;
"prefix;"prefix;	iÏ[o:Sass::Tree::VariableNode:@children[ ;
@:@guarded0:
@expro;
;[ ;
@;iÈ;{ ;"comma-list;iÈ;"new-listo:Sass::Tree::EachNode;[o;;[ ;
@;0;o;
;[o;	;
@;iÊ;"new_list;"new-listo;
;[o;	;
@;iÊ;"prefix;"prefixo;	;
@;iÊ;"v;"v;
@;iÊ;{ ;"prefixed-for-transition;
@;iÊ;{ ;"append;iÊ;"new-list:	@var"v;
@:
@listo;	;
@;iÉ;"property;"property:@has_childrenT;iÉo:Sass::Tree::ReturnNode	;[ ;
@;o;	;
@;iÌ;"new_list;"new-list;iÌ;#[[o;$;	@
;%"prefix;"prefix0[o;$;	@
;%"property;"property0;	@
;+T;
iÆ;"prefixed-for-transitiono;;[ ;0;	@
;i ;"7/* Checks if the value given is a unit of time. */;
iÖ;[ o;5;[u;!ù[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"number:
@lineiØ:
@type:identifier;
@:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;
@;iØ:@underscored_name"
value:
@name"
value;
@;iØ:@keywords{ ;"type-of;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:@children[ :@options{ :
@expro:Sass::Script::Bool;@	:@valueF:
@lineiÛ;iÛ[o:Sass::Tree::ReturnNode	:@children[ ;
@:
@expro:!Sass::Script::UnaryOperation	;:not;
@:@operando;	;;;
@;o;
;[o:Sass::Script::List	;
@;[o;		;
@;"s;iÙ;;o;		;
@;"ms;iÙ;;;iÙ:@separator:
spaceo;
;[o;	;
@;iÙ;"
value;"
value;
@;iÙ;{ ;"	unit;
@;iÙ;{ ;"
index;iÙ;iÙ;iÙ;#[[o;$;	@
;%"
value;"
value0;	@
;+T;
i×;"is-time;	@
;+T;
i